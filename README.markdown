autocorrect.vim
===============

This is a autocorrect plugin built from scratch. Every word added to the
autocorrect file was spelled incorrectly by me at some point during my
usage with Vim. In fact, several were added during the writing of this
README file. 

How to Install
==============
VIM 8.0 does a much better job with package mangagment (check
out [this screen cast](https://vimcasts.org/episodes/packages)
from one of the best, Drew Neil), although I personally use
[Vundle.vim](https://github.com/VundleVim/Vundle.vim). Check them out.

How to use this?
================

To load the autocorrect file, you need to run the command
`LoadAutocorrect`. It doesn't load by default because it can take away
from the all important VIM startup time. You can run this directly using
an Ex command like

```vim
:LoadAutocorrect
```

or you can use the default mapping (which stands for Load AutoCorrect)

```vim
<leader>lac
```

or call it directly from a function 

```vim
call LoadAutocorrect()
```

At this point, type your prose as normal!

Extending
=========

You can easily extend the list with your own personal autocorrect file.
By default, you can quickly add words to the file with the mapping
(standing for Add Abbreviation).

```vim
<leader>aa
```

This mapping will by default open up a `.autocorrect` file in your home
directory, with the `iabbrev` command ready to go. If the first
suggested option isn't what you want the correction to be, just change
it. 

Can I change the default location of the `~/.autocorrect` file?
---------------------------------------------------------------
Yes you can. Just put something like 

```vim
let g:Autocorrect_PersonalFile='~/mydirectory/mynewfile.someextension'
```

How was this built?
===================

This list was built slowly, one word at a time, and only words that I
have actually physically typed incorrectly are on the list. This list
was not generated by some script. Because of this, I feel there is much
less waste and more crazy misspelling that actually occur in practice.

I don't plan on stopping using Vim for a long, long time, so this is
only going to grow, but everyone should reap the benefits of this.
